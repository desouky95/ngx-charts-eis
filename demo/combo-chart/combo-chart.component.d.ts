import { EventEmitter, TemplateRef } from '@angular/core';
import { BaseChartComponent, LineSeriesComponent, ViewDimensions, ColorHelper } from '../../src';
export declare class ComboChartComponent extends BaseChartComponent {
    lineSeriesComponent: LineSeriesComponent;
    curve: any;
    legend: boolean;
    legendTitle: string;
    legendPosition: string;
    xAxis: any;
    yAxis: any;
    showXAxisLabel: any;
    showYAxisLabel: any;
    showRightYAxisLabel: any;
    xAxisLabel: any;
    yAxisLabel: any;
    yAxisLabelRight: any;
    tooltipDisabled: boolean;
    gradient: boolean;
    showGridLines: boolean;
    activeEntries: any[];
    schemeType: string;
    xAxisTickFormatting: any;
    yAxisTickFormatting: any;
    yRightAxisTickFormatting: any;
    roundDomains: boolean;
    colorSchemeLine: any[];
    autoScale: any;
    lineChart: any;
    yLeftAxisScaleFactor: any;
    yRightAxisScaleFactor: any;
    rangeFillOpacity: number;
    animations: boolean;
    activate: EventEmitter<any>;
    deactivate: EventEmitter<any>;
    tooltipTemplate: TemplateRef<any>;
    seriesTooltipTemplate: TemplateRef<any>;
    dims: ViewDimensions;
    xScale: any;
    yScale: any;
    xDomain: any;
    yDomain: any;
    transform: string;
    colors: ColorHelper;
    colorsLine: ColorHelper;
    margin: any[];
    xAxisHeight: number;
    yAxisWidth: number;
    legendOptions: any;
    scaleType: string;
    xScaleLine: any;
    yScaleLine: any;
    xDomainLine: any;
    yDomainLine: any;
    seriesDomain: any;
    scaledAxis: any;
    combinedSeries: any;
    xSet: any;
    filteredDomain: any;
    hoveredVertical: any;
    yOrientLeft: string;
    yOrientRight: string;
    legendSpacing: number;
    bandwidth: any;
    barPadding: number;
    trackBy(index: any, item: any): string;
    update(): void;
    deactivateAll(): void;
    hideCircles(): void;
    updateHoveredVertical(item: any): void;
    updateDomain(domain: any): void;
    getSeriesDomain(): any[];
    isDate(value: any): boolean;
    getScaleType(values: any): string;
    getXDomainLine(): any[];
    getYDomainLine(): any[];
    getXScaleLine(domain: any, width: any): any;
    getYScaleLine(domain: any, height: any): any;
    getXScale(): any;
    getYScale(): any;
    getXDomain(): any[];
    getYDomain(): any[];
    onClick(data: any): void;
    setColors(): void;
    getLegendOptions(): {
        scaleType: string;
        colors: any;
        domain: any[];
        title: any;
        position: string;
    };
    updateLineWidth(width: any): void;
    updateYAxisWidth({ width }: {
        width: any;
    }): void;
    updateXAxisHeight({ height }: {
        height: any;
    }): void;
    onActivate(item: any): void;
    onDeactivate(item: any): void;
}
